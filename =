#!/usr/bin/env bash

usage() {
    cat <<__EOF__
Usage: = [OPTION]... [QUERY]... [-- [MENU_OPTION]...]
A qalc frontend for menus like rofi, bemenu, and dmenu.

With no QUERY, initialize blank. MENU_OPTION appends options to the default
options for the menu.

  -m, --menu        select menu program. Defaults to rofi, bemenu, or dmenu
                    if available
  -n, --no-opts     disable default options for menu program
  -h, --help        display this help and exit

Full documentation: man menu-qalc.1
__EOF__
}


# Process CLI options
temp="$(getopt -n '=' -o '-h,m:,n' -l 'help,menu:,no-opts' -- "$@")"

case $? in
    0) ;;
    1)
        usage
        exit 2 ;;
    *)
        echo 'Fatal error parsing options' >&2
        exit 127 ;;
esac

eval set -- "$temp"
unset temp

# Set default options
opts_menu=0
opts_menu_=''
opts_no_opts=0
opts_query=0
opts_query_=()

# Read options
while true; do
    case "$1" in
        -h|--help)
            usage
            shift
            exit 1 ;;
        -m|--menu)
            opts_menu=1
            opts_menu_="$2"
            shift 2
            continue ;;
        -n|--no-opts)
            opts_no_opts=1
            shift 1
            continue ;;
        --)
            shift
            break ;;
        *)
            opts_query=1
            opts_query_+=("$1")
            shift
            continue ;;
    esac
done


# Parse options
if [ "$opts_menu" -gt 0 ]; then
    menu="$opts_menu_"
elif command -v rofi >/dev/null; then
    menu=rofi
elif command -v bemenu >/dev/null; then
    menu=bemenu
elif command -v dmenu >/dev/null; then
    menu=dmenu
else
    echo 'No menu found or specified' >&2
    exit 2
fi

if [ "$opts_no_opts" -gt 0 ]; then
    moptions=()
elif [ "$(basename "$menu")" = rofi ]; then
    moptions=(-dmenu -p {})
elif [ "$(basename "$menu")" = bemenu ]; then
    moptions=(-p {} -cl 3 -W 0.2)
else
    moptions=(-p {})
fi
moptions+=("$@")

if [ "$opts_query" -gt 0 ]; then
    query="${opts_query_[*]}"
else
    query=''
fi


# Event loop
while true; do
    # Grab answer
    if [ -n "$query" ]; then
        answer=" $(echo "$query" | qalc +u8 -color=never -terse |
            awk '!/^>/ && !/^$/ {gsub(/^[ \t]+|[ \t]+$/, "", $0); print}')"
    else
        answer=''
    fi

    # Prompt user
    moptions_prompt=()
    for arg in "${moptions[@]}"; do
        moptions_prompt+=("${arg//\{\}/=$answer}")
    done

    if ! action=$(echo -e "Copy to clipboard\nClear\nClose" |
        "$menu" "${moptions_prompt[@]}")
    then
        exit 3
    fi

    # Take action
    case "$action" in
        'Clear') query='' ;;
        'Copy to clipboard') echo "$answer" | wl-copy -n ;;
        'Close') exit 0 ;;
        *) query="$answer $action" ;;
    esac
done
